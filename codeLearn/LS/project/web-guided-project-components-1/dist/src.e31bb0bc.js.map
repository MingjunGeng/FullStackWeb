{"version":3,"sources":["data/panelData.js","data/constants.js","data/linkData.js","index.js"],"names":["panelData","title","content","open","close","linkData","href","className","text","imageData","imageURL","makeImage","image","document","createElement","src","style","height","forEach","item","imgElement","imgObj","body","prepend","constants","accordion","querySelector","makePanel","panel","panelBar","panelContent","panelTitle","panelButtons","openButton","closeButton","appendChild","classList","add","textContent","addEventListener","toggle","console","log","panelElements","map","panelElem","panelElement","linkMaker","link","linkObj","linkElem"],"mappings":";;AGuCA;;AACA;;AFxCA,ACAC,AFAA,AGyCD,IFzCMG,ACACE,AFAAL,ICAG,GAAG,CCAE,CFAC,EEAE,CAChB,AFDiB,CACjB,ECDF;AACA,ACAIM,AFCAL,EEDAK,AFCAL,ECDEG,ECAE,CFCC,CEDC,CDAC,ADCA,EEDT,CDAY,QAAd,ADAE;AEAaG,AFEXL,EEFWK,AFEXL,OAAO,EEFa,AFEX,EEFa,EDEX,QCFb;ADGAC,ACHoCK,AFApC,CADiB,CCIjBL,ACHoCK,CFIpC,GCDI,ACHoC,EDGlCL,ACHoC,IDE7B;AAEbC,ACJA,AFKEH,AGNJ,CDAkB,CDKhBG,ADCEH,CEJF,IDGK,ADCE,ECDAG,ADCE,cADT;ACFa,ACDXE,AFKAJ,AGNJ,EDCII,AFKAJ,IELI,EAAE,CFKC,EELT,AFKW;AELEK,AFGb,AGHF,CHFmB,CEEJA,CFOb,QEPsB,EAAE,UAAxB;AAAoCC,AFQlCP,AGPJ,EDDsCO,AFQlCP,EGPEQ,EDDoC,CFQjC,CERmC,CFQjC,IGPI,GAAG,CAChB,gBHKA;AEPA,AFSEP,AGPAQ,CDJc,CFWdR,AGPAQ,CDDF,MFQS,CGPC,CHOC,CGPC;ADDVJ,AFMF,AGLA,CHJiB,AGGD,CDAdA,CFUF,AGRA,GDFM,EAAE,GAAR;AAAaC,AFWXN,AGTAS,EDFWH,AFWXN,AGTAS,KHSK,EAAE,CGTC,CDFY,CCEV,CDFY,KFUxB,KEVA;AAAoCF,AFYlCN,AGVF,CAFgB,CDAoBM,AFYlCN,CGTF,GDHwC,EAAE,CFYjC,EAAE;AEZX,AFUA,AGPEQ,CDNc,AFAC,CAAlB,AGMGA,CDFF,OCEU,EAAE;ADFVJ,ACEF,CAHgB,CDCdA,ACDJ,IDCQ,EAAE,GAAR,IFeaN;AEfAO,EAAAA,SAAS,EAAE,UAAxB;AAAoCC,ACKtC,EDLsCA,IAAI,EAAE,CCKnCG,SAAT,OAA8B;ADL5B,ACK4B,CDTZ,CAAjB,ICSmBD,QAAU,QAAVA,QAAU;AAC5B,eDHaL;ACIb,MAAMO,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CAF4B,CAG5B;;AACAF,EAAAA,KAAK,CAACG,GAAN,GAAYL,QAAZ,CAJ4B,CAK5B;;AACAE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","file":"src.e31bb0bc.js","sourceRoot":"../src","sourcesContent":[" const panelData = [\n  {\n    title: \"Vigilante\",\n    content: \"No, no, no. A vigilante is just a man lost in scramble for his own gratification. He can be destroyed or locked up. But if you make yourself more than just a man, if you devote yourself to an idel and if they can't stop you then you become something else entirely. Legend, Mr Wayne.\",\n  },\n  {\n    title: \"The Mountain\",\n    content: \"Tomorrow, you will be released. If you are bored of brawling with thieves and want to achieve something there is a rare blue flower that grows on the eastern slopes. Pick one of these flowers. If you can carry it to the top of the mountain, you may find what you were looking for in the first place.\",\n  },\n  {\n    title: \"A World without Batman\",\n    content: \"I had a vision of a world without Batman. The Mob ground out a little profit and the police tried to shut them down one block at a time. And it was so boring. I've had a change of heart. I don't want Mr Reese spoiling everything but why should I have all the fun? Let's give someone else a chance. If Coleman Reese isn't dead in 60 minutes then I blow up a hospital.\",\n  },\n  {\n    title: \"Balance\",\n    content: \"I'm here to ensure the League of Shadow fulfills its duty to restore balance to civilization. You yourself fought the decadence of Gotham for years with all your strength, all your resources, all your moral authority. And the only victory you achieved was a lie. Now, you understand? Gotham is beyond saving and must be allowed to die.\",\n  },\n]\n\nexport default panelData\n","const open = '\\u25bc'\nconst close = '\\u25b2'\n\nexport default {\n  open: open,\n  close: close,\n}\n"," const linkData = [\n  { href: '#', className: 'nav-item', text: 'Home' },\n  { href: '#', className: 'nav-item', text: 'About' },\n  { href: '#', className: 'nav-item', text: 'Blog' },\n  { href: '#', className: 'nav-item', text: 'Contact' },\n]\n\nexport default linkData\n","// TASK 0- Motivate demoing a small makeImage component\n//  that takes an { imgURL } and returns an img element.\n//  Then loop over these URLs making images as you go:\nconst imageData = [\n  { imageURL: 'https://images.dog.ceo/breeds/mastiff-tibetan/n02108551_978.jpg' },\n  { imageURL: 'https://images.dog.ceo/breeds/mastiff-bull/n02108422_3398.jpg' },\n  { imageURL: 'https://images.dog.ceo/breeds/mastiff-bull/n02108422_2947.jpg' },\n]\n\nfunction makeImage({imageURL}){\n  // step oone : Create the element\n  const image = document.createElement('img');\n  // step two: [optional]: add content to the element\n  image.src = imageURL;\n  // step three [optional]:add styling\n  image.style.height = '10em';\n  // step four: return the element\n  return image;\n}\n\nimageData.forEach(item => {\n  //console.log(item.imageURL);\n  // makeImage(item.imageURL)\n  //makeImage(item)\n  const imgElement = makeImage(item);\n  //document.body.prepend(imgElement);\n  //ioidocument.body.appendChild(imgElement);\n})\nimageData.forEach(imgObj => {\n  const imgElement = makeImage(imgObj);\n  document.body.prepend(imgElement);\n})\n\n// TASK 1- Import the data we need to \"hydrate\" our component.\n//  On the one hand, the default export from data/panelData.js\n//  On the other hand, the default export from data/constants.js\n//  Destructure `open` and `close` from the constants\n\n\nimport panelData from './data/panelData.js';\nimport constants from './data/constants.js';\nimport linkData from './data/linkData.js';\n\n\n// TASK 2- Verify our imports using log statements\n// console.log(panelData) // log the panelData\n// console.log(constants) // log the open arrow\n// console.log(linkData) // log the close arrow\n\nconst { open, close } = constants;\n // {open: 'asdf', close: 'blah'}\n// const open = constants.open\n// const close = constants.close\n// console.log(open);\n// console.log(close);\n// TASK 3- Comment out the div.panel from index.html and grab its parent element.\n//  We will generate the panel with code, and we'll need the parent\n//  so we can append the code-generated panel to the DOM.\nconst accordion = document.querySelector('.accordion')\n\n// console.log(accordion);\n  // <div class=\"panel\">\n  //   <div class=\"panel-bar\">\n  //     <h3>Title of Panel</h3>\n  //     <div class=\"panel-buttons\">\n  //       <button class=\"panel-btn-open\">&#9660</button>\n  //       <button class=\"panel-btn-close hide-btn\">Close</button>\n  //     </div>\n  //   </div>\n  //   <div class=\"panel-content toggle-on\">\n  //     Content of panel\n  //   </div>\n  // </div>\n\n// TASK 4- Create a function 'makePanel' that creates a panel exactly as you see it in the HTML.\nfunction makePanel({title, content}) {\n\n\n  // TASK 5- Instantiate all the elements needed for a panel\n  const panel = document.createElement('div');\n  const panelBar = document.createElement('div');\n  const panelContent = document.createElement('div');\n  const panelTitle = document.createElement('h3');\n  const panelButtons = document.createElement('div');\n  const openButton = document.createElement('button');\n  const closeButton = document.createElement('button');\n\n// document.body.prepend(panel);\n\n  // TASK 6- Setup the structure of our elements\n  /*\n    <div>                   // panel\n      <div>                 // panelBar\n        <h3></h3>           // panelTitle\n        <div>               // panelButtons \n          <button></button> // openButton\n          <button></button> // closeButton\n        </div>\n      </div>\n      <div></div>           // panelContent\n    </div>\n  */\n panel.appendChild(panelBar);\n panel.appendChild(panelContent);\n panelBar.appendChild(panelTitle);\n panelBar.appendChild(panelButtons);\n panelButtons.appendChild(openButton);\n panelButtons.appendChild(closeButton);\n\n  // TASK 7- Add proper class names to our elements (See index.html for reference)\n  // paying attention to the elements that need to start out hidden\npanel.classList.add('panel');\npanelBar.classList.add('panel-bar');\npanelButtons.classList.add('panel-buttons');\nopenButton.classList.add('panel-btn-open');\ncloseButton.classList.add('panel-btn-close', 'hide-btn');\npanelContent.classList.add('panel-content', 'toggle-on');\n\n  // TASK 8- Set text content using arguments as raw material\n  //  and also using the open and close arrows imported at the top of the file\n  panelTitle.textContent = title;\n  panelContent.textContent = content;\n  openButton.textContent = open;\n  closeButton.textContent = close;\n\n  // TASK 9- When the 'open' or 'close' buttons are clicked, the content is toggled on/off:\n  //  - the open button needs to go away (the 'hide-btn' class name controls this)\n  //  - the close button needs to show (the 'hide-btn' class name controls this)\n  //  - the contents need to show (the 'toggle-on' class name controls this)\n  panelButtons.addEventListener('click',function(){\n    openButton.classList.toggle('hide-btn');\n    closeButton.classList.toggle('hide-btn');\n    panelContent.classList.toggle('toggle-on');\n    console.log(panelTitle.textContent);\n\n  });\n\n  // don't forget to return the panel!\n  return panel;\n}\n//const panelElement = makePanel({title:'MJ', content:'ggg'});\nconst panelElements = panelData.map(panelElem => {\n  return makePanel(panelElem);\n})\n\n\n// TASK 10- Loop through the panelData we imported from the data folder\n//  creating panels for each content and title and append them to the DOM.\n//  We can do this with a single forEach, or with a map and a forEach.\n\n// accordion.appendChild(panelElement);\n\npanelElements.forEach(panelElement => {\n  accordion.appendChild(panelElement);\n})\n// [STRETCH] Comment out the links inside the nav and\n// write a linkMaker that takes { href, className, text }\n// and returns an anchor tag with the right href, class and textContent.\n// Loop over the 'linkData' in the data folder, generate anchor tags\n// and append them to the nav.\nfunction linkMaker({ href, className, text }) {\n  // const href = obj.href;\n  // const className = obj.className\n  const link = document.createElement('a');\n  link.href = href;\n  link.className = className;\n  link.textContent = text;\n  return link;\n}\n\nlinkData.forEach(linkObj => {\n  const linkElem = linkMaker(linkObj);\n  document.querySelector('nav').appendChild(linkElem);\n  // const navEl = document.querySelector('nav');\n  // document.querySelector('.main-nav');\n  // navEl.appendChild(linkElem);\n})"]}